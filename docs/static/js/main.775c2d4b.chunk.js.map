{"version":3,"sources":["components/AddCategory.js","hooks/UseFetch.js","helpers/GifHelper.js","components/RenderGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","text","setText","onSubmit","e","preventDefault","c","value","onChange","target","type","useFetch","url","args","values","a","urlArgs","forEach","arg","index","urlDef","fetch","response","json","data","GifService","category","dataMap","map","id","title","images","original","RenderGifs","setImages","useEffect","then","res","console","log","divGifs","i","src","alt","className","RenderImages","GifExpertApp","categories","RenderCategories","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAgCeA,MA5Bf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEZC,mBAAS,IAFG,mBAE7BC,EAF6B,KAEvBC,EAFuB,KAapC,OACK,sBAAMC,SANU,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAAAO,GAAC,OAAKL,GAAL,mBAAcK,QAI5B,SACG,uBACIC,MAAON,EACPO,SAbW,SAACJ,GACpBF,EAAQE,EAAEK,OAAOF,QAaTG,KAAK,Y,uBCpBRC,EAAQ,uCAAG,WAAOC,EAAKC,EAAMC,GAAlB,qBAAAC,EAAA,6DAChBC,EAAU,IACdH,EAAKI,SAAQ,SAACC,EAAKC,GACfH,GAAO,UAAOE,EAAP,YAAcJ,EAAOK,GAArB,QAGLC,EAASR,EAAMI,EAND,SAOIK,MAAMD,GAPV,cAOdE,EAPc,gBAQDA,EAASC,OARR,cAQdC,EARc,yBASbA,GATa,4CAAH,0DCCRC,EAAU,uCAAG,WAAOC,GAAP,uBAAAX,EAAA,4DAEV,uCACNF,EAAO,CAAC,UAAW,IAAK,SACxBC,EAAS,CAAC,mCAAoCY,EAAU,IAJxC,SAKCf,EAHX,uCAGyBE,EAAMC,GALrB,uBAKdU,EALc,EAKdA,KACFG,EAAUH,EAAKI,KAAI,SAAAtB,GAAM,MAAO,CAClCuB,GAAIvB,EAAEuB,GACNC,MAAOxB,EAAEwB,MACTlB,IAAKN,EAAEyB,OAAOC,SAASpB,QATL,kBAWfe,GAXe,2CAAH,sDCAVM,EAAa,SAAC,GAAgB,IAAfP,EAAc,EAAdA,SAAc,EAEV1B,mBAAS,IAFC,mBAE/B+B,EAF+B,KAEvBG,EAFuB,KAKtCC,qBAAU,WACPV,EAAWC,GAAUU,MAAK,SAAAC,GAAG,OAAIH,EAAUG,QAC3C,CAACX,IAeJ,OADAY,QAAQC,IAAIR,GAER,gCACI,6BAAKL,IAfQ,WACjB,IAAMc,EAAO,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAQH,KAAI,SAAAa,GACxB,OAAQ,qBAAgBC,IAAKD,EAAE7B,IAAK+B,IAAKF,EAAEX,OAAzBW,EAAEZ,OAExB,OACI,qBAAKe,UAAU,UAAf,SACKJ,IAUJK,OCEEC,MA1Bf,WAAyB,IAAD,EAEgB9C,mBAAS,CAAC,cAAe,SAAU,QAFnD,mBAEb+C,EAFa,KAEDhD,EAFC,KAIdiD,EAAmB,WAIrB,OAHYD,EAAWnB,KAAI,SAAAqB,GACvB,OAAO,cAAC,EAAD,CAAsBvB,SAAUuB,GAAfA,OAQhC,OADAX,QAAQC,IAAIS,KAER,qCACE,gDACA,uBACA,cAAC,EAAD,CAAajD,cAAeA,IAC5B,6BACKiD,U,MCjBfE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.775c2d4b.chunk.js","sourcesContent":["\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nfunction AddCategory( {setCategories} ) {\n\n    const [text, setText] = useState('');\n\n    const handleOnChange = (e) => {\n        setText(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setCategories(c => [text, ...c]);\n    }\n     \n    return (\n         <form onSubmit={handleSubmit}>\n            <input\n                value={text}\n                onChange={handleOnChange}\n                type=\"text\"\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","\n\nexport const useFetch = async (url, args, values) => {\n    let urlArgs = '?';\n    args.forEach((arg, index) => {\n        urlArgs += `${arg}=${values[index]}&`;\n    });\n    \n    const urlDef = url + urlArgs;\n    const response =  await fetch(urlDef);\n    const data = await response.json();\n    return data;\n}\n","import { useFetch } from \"../hooks/UseFetch\";\n\n\nexport const GifService = async (category) => {\n\n    const url = 'https://api.giphy.com/v1/gifs/search';\n    const args = ['api_key', 'q', 'limit'];\n    const values = ['3otHdTH4U7hjAREM1XpMuXO2MWYcQ9Vx', category, 10];\n    const { data } = await useFetch(url, args, values);\n    const dataMap = data.map(c => {return({\n        id: c.id,\n        title: c.title,\n        url: c.images.original.url\n    })});\n    return dataMap;    \n}\n","import React, { useEffect, useState } from 'react'\nimport { GifService } from '../helpers/GifHelper';\n\nexport const RenderGifs = ({category}) => {\n\n    const [images, setImages] = useState([]);\n\n\n    useEffect(() => {\n       GifService(category).then(res => setImages(res))\n    }, [category]);\n\n    const RenderImages = () => {\n        const divGifs = images?.map(i => {\n            return (<img key={i.id} src={i.url} alt={i.title} />)\n        })\n        return (\n            <div className=\"gif_div\">\n                {divGifs}\n            </div>\n        );\n    }\n    \n\n    console.log(images);\n    return (\n        <div>\n            <h3>{category}</h3>\n            {RenderImages()}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport { RenderGifs } from './components/RenderGifs';\n\nfunction GifExpertApp() {\n\n    const [categories, setCategories] = useState(['Dragon Ball', 'Naruto', 'KNY']);\n\n    const RenderCategories = () => {\n        const cat = categories.map(cat => {\n            return <RenderGifs key={cat} category={cat}  />\n        });\n        return cat;\n    }\n\n\n\n    console.log(RenderCategories());\n    return (\n        <>\n          <h2>Gif Expert App</h2>\n          <hr />  \n          <AddCategory setCategories={setCategories}/>\n          <ol>\n              {RenderCategories()}\n          </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}